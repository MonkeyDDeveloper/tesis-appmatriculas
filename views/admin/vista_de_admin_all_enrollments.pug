include ../partials/head.pug
body
include ../partials/navegacion_admin.pug
mixin alert(type, message)
  .alert.alert-dismissible.fade.show(role="alert" class=type?'alert-success':'alert-danger')
    =message
    button.btn-close(type="button", data-bs-dismiss="alert", aria-label="Close")  
if (success)
  +alert(true, success)
h1.text-center.bg-light.p-2(style="color: #2E4053") Todas las matrículas
input#admin_name(type="hidden", name="admin_name", value=admin_name)
input#admin_identifier(type="hidden", name="admin_identifier", value=admin_identifier)
.container-fluid.mb-4
  form#form_filter
   .row.justify-content-between.rounded.align-items-center.py-1(style="background-color:rgb(40, 55, 71)")
    .col-12.col-lg-3.my-1
     .form-floating
        select.form-select(title='Filtrar por tipo.' name="type_filter")
          option(value="") Ninguno
          option(value="ORDINARIA") ORDINARIA
          option(value='EXTRAORDINARIA') EXTRAORDINARIA
          option(value='ESPECIAL') ESPECIAL
        label Filtrar por tipo
    .col-12.col-lg-3.my-1
     .form-floating
        select.form-select(title='Filtrar por periodo.' name="period_filter")
          option(value="") Ninguno
          option(value="IPA") IPA
          option(value='IIPA') IIPA
        label Filtrar por periodo
    .col-12.col-lg-3.my-1
     .form-floating
        input.form-control(type='number' min=2014 placeholder='Filtrar por año', name="year_filter")
        label Filtrar por año
    .col-12.col-lg-3.my-1
     .form-floating
        select.form-select(title='Filtrar por carrera.' name="career_filter")
          option(value="") Ninguno
          option(value="AUTOMATIZACION E INSTRUMENTACION") Automatizacion e instrumentación
          option(value='MONITOREO AMBIENTAL') Monitoreo Ambiental
          option(value='DESARROLLO INFANTIL INTEGRAL') Desarrollo Infantil Integral
          option(value='MECATRONICA') Mecatrónica
          option(value='MECANICA INDUSTRIAL') Mecánica Industrial
          option(value='SEGURIDAD Y PREVENCION DE RIESGOS LABORALES') Seguridad y Prevencion de Riesgos Laborales
          option(value='SOLDADURA') Soldadura
        label Filtrar por carrera
    .col-12.col-lg-3.my-1
     .form-floating
        input.form-control(type='text' placeholder='Filtrar por numero de identificación', name="ci_filter")
        label Filtrar por número de identificación
    .col-12.col-sm-12.col-md-2.col-lg-1.my-1
        button.form-control.btn.btn-primary(type="submit") Filtrar
.container-fluid.my-2
 .row
  .col-12
    #message_area
      - if(allEnrollments.length <= 0 && found == undefined)
        +alert(true, 'Para ver las matrículas por favor proporcione algún tipo de filtro.')
      - if(allEnrollments.length <= 0 && found == false)
        +alert(false, 'No se ha encontrado matrículas con el filtro específicado.')
  .col.overflow-auto
    table.table.table-striped.table-hover
      caption 
        - if (allEnrollments.length > 0)
          | Todas las matrículas
        - else
          | No hay matriculas para mostrar. 
      thead.text-white(style="background-color:rgb(40, 55, 71)")
      tr
        th(scope='col').text-center Nombres
        th(scope='col').text-center Identificación
        th(scope='col').text-center Periodo
        th(scope='col').text-center Carrera
        th(scope='col').text-center Tipo
        th(scope='col').text-center Matricula
        th(scope='col').text-center Descargar excel
      tbody#enrollments_container
        -if (allEnrollments.length > 0)
          each enrollment in allEnrollments.reverse()
            tr.container(id=`${enrollment._id}CONTAINER` data-type=enrollment.enrollment_features.type data-year=enrollment.enrollment_features.year data-period=enrollment.enrollment_features.period data-career=enrollment.enrollment_features.career data-student=enrollment.student[0])
              td(style="vertical-align:middle").name=enrollment.student.slice(1).join(' ')
              td(style="vertical-align:middle").no_identifier=enrollment.student[0]
              td(style="vertical-align:middle").period=`${enrollment.enrollment_features.period} ${enrollment.enrollment_features.year}`
              td(style="vertical-align:middle").career=enrollment.enrollment_features.career
              td(style="vertical-align:middle").career=enrollment.enrollment_features.type
              td(style="vertical-align:middle").text-center 
                button.m-1.btn.btn-primary.watch(title='Ver datos de la matrícula.' data-bs-target=`#staticBackdrop${enrollment._id}` id=enrollment._id) 
                  | Ver
                -if(enrollment.qualified[0]==false)
                  button.m-1.btn.btn-danger.delete(title='Eliminar la matrícula.' data-_id=enrollment._id) 
                    | Eliminar 
              td(style="vertical-align:middle").text-center
                - let student = enrollment.studentData[0]
                button.btn.btn-success(title='Obtener datos de la matricula en excel.' type='button' data-excel=JSON.stringify([enrollment._id, student.no_identifier, enrollment.enrollment_features.period, enrollment.enrollment_features.year])) Descargar Excel
-if(allEnrollments.length > 0)
  row
    .col.d-flex.justify-content-end
      button#downloadAllButton.btn.btn-primary(title='Descargar archivo excel de todas las matrículas' type="button")
        | Descargar todas
-if(allEnrollments.length > 0)
  each enrollment in allEnrollments.reverse()
   .modal.fade.modal_container(aria-modal='true' id=`staticBackdrop${enrollment._id}` data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true")
    .modal-dialog.modal-lg.modal-dialog-scrollable.modal-xl
     .modal-content
       .modal-header
          .row
            .col-12
              h5.modal-title Datos de la matrícula
            .col-12
              h6.last_modify.modal-title=`Revisado por: ${enrollment.last_modify}`
            .col-12
              -if(enrollment.qualified[0]==true)
                h6.qualified.modal-title=`Asignaturas calificadas por: ${enrollment.qualified[1][0]}`
          button.btn-close.close_button(type="button" data-bs-dismiss="modal" aria-label="Close")
       .modal-body
          .container-fluid
             .row.my-3
                mixin point_data(title, c, value)
                    .col-6.border
                      strong=title
                    .col-6.border
                      span(class=c)=value
                -let name = enrollment.student.slice(1).filter(n => n!='NA').join(' ')
                -let studentData = enrollment.studentData[0]
                +point_data('Nombre: ', 'name', name)
                +point_data('Tipo de identificación: ', 'identifier', studentData.identifier)
                +point_data('Número de identificación: ', 'no_identifier', studentData.no_identifier)
                +point_data('Séxo: ', 'sex', studentData.sex?'HOMBRE':'MUJER')
                +point_data('Género: ', 'gender', studentData.gender?'MASCULINO':'FEMENINO')
                +point_data('Estado civil: ', 'marital_status', studentData.marital_status)
                +point_data('Etnia: ', 'ethnicity', studentData.ethnicity)
                +point_data('Pueblo: ', 'village', studentData.village)
                +point_data('Tipo de sangre: ', 'blood_type', studentData.blood_type)
                +point_data('Discapacidad: ', 'disability', studentData.disability?'SI':'NO')
                +point_data('Porcentaje de discapacidad: ', 'disability_percentage', studentData.disability_percentage)
                +point_data('Número de carnet CONADIS/MSP: ', 'conadis_msp', studentData.conadis_msp)
                +point_data('Tipo de discapacidad: ', 'disability_type', studentData.disability_type)
                +point_data('Fecha de nacimiento: ', 'birth_date', studentData.birth_date)
                +point_data('País - Nacionalidad: ', 'nationality', studentData.nationality)
                +point_data('Provincia de nacimiento: ', 'province_birth', studentData.province_birth)
                +point_data('Cantón de nacimiento: ' , 'canton_birth', studentData.canton_birth)
                +point_data('País de residencia: ' , 'country_residence', studentData.country_residence)
                +point_data('Provincia de residencia: ' , 'province_residence', studentData.province_residence)
                +point_data('Cantón de residencia: ' , 'canton_residence', studentData.canton_residence)
                +point_data('Tipo de colegio: ' , 'type_school', studentData.type_school)
                +point_data('Modalidad: ', 'modality', studentData.modality)
                +point_data('Fecha de inicio de carrera: ', 'career_start', studentData.career_start=='undefined'?'INDEFINIDO':studentData.career_start)
                +point_data('Fecha de matricula: ', 'updatedAt', enrollment.createdAt.toISOString().substring(0, 10))
                +point_data('Tipo de matricula: ', 'type', enrollment.enrollment_features.type)
                +point_data('Nivel académico: ', 'level', studentData.level)
                +point_data('Sección: ', 'work_day', enrollment.information_per_enroll.work_day)
                +point_data('Duración del periodo académico: ', 'duration', `${enrollment.enrollment_features.duration} SEMANAS`)
                +point_data('Ha repetido al menos una materia: ', 'subjects_repeated', studentData.subjects_repeated?'SI':'NO')
                +point_data('El estudiante mantiene gratuidad: ', 'gratuity', studentData.gratuity?'SI':'NO')
                +point_data('Recibe pensión diferenciada: ', 'differentiated_pension', enrollment.information_per_enroll.differentiated_pension=='true'?'SI':'NO')
                +point_data('Ocupación del estudiante: ', 'student_occupation', enrollment.information_per_enroll.student_occupation)
                +point_data('Ingresos del estudiante: ', 'student_income', enrollment.information_per_enroll.student_income)
                +point_data('Recibe bono de desarrollo: ', 'development_bonus', enrollment.information_per_enroll.development_bonus=='true'?'SI':'NO')
                +point_data('Tipo de beca: ', 'type_scholarship', enrollment.information_per_enroll.type_scholarship)
                +point_data('Razón de beca: ', 'scholarship_reason', enrollment.information_per_enroll.scholarship_reason)
                +point_data('Monto de beca: ', 'scholarship_amount', enrollment.information_per_enroll.scholarship_amount)
                +point_data('Porcentaje de cobertura arancel: ', 'tariff_coverage', enrollment.information_per_enroll.tariff_coverage)
                +point_data('Porcentaje de cobertura manutención: ', 'maintenance_coverage', enrollment.information_per_enroll.maintenance_coverage)
                +point_data('Financiamiento de beca: ', 'scholarship_funding', enrollment.information_per_enroll.scholarship_funding)
                +point_data('Tiene crédito educativo: ', 'educative_credit', enrollment.information_per_enroll.educative_credit=='true'?'SI':'NO')
                +point_data('Correo electrónico: ', 'email', studentData.email)
                +point_data('Número celular: ', 'no_celular', studentData.no_celular)
                +point_data('Nivel de formación del padre: ', 'father_level', studentData.father_level)
                +point_data('Nivel de formación de la madre: ', 'mother_level', studentData.mother_level)
                +point_data('Ingresos totales del hogar: ', 'household_income', `${studentData.household_income} DÓLARES`)
                +point_data('Monto de ayuda económica: ', 'economic_aid', enrollment.information_per_enroll.economic_aid=="0"?"NO APLICA":`${enrollment.information_per_enroll.economic_aid} DÓLARES`)
                +point_data('Cantidad de miembros en el hogar: ', 'members_family', `${enrollment.information_per_enroll.members_family} MIEMBROS`)
                +point_data('Contacto de emergencia: ', 'emergency_contact', enrollment.information_per_enroll.emergency_contact)
                +point_data('Número de contacto de emergencia: ', 'no_emergency_contact', enrollment.information_per_enroll.no_emergency_contact)
                +point_data('Dirección: ', 'direction', `Lng: ${studentData.direction[0]}  |  Lat: ${studentData.direction[1]}`)
                +point_data('Habla algun idioma ancestral: ', 'ancestral_language', studentData.ancestral_language)
                +point_data('Categoría migratoria: ', 'migratory_category', studentData.migratory_category)
                +point_data('Posee algún título de educación superior: ', 'higher_degree', enrollment.information_per_enroll.higher_degree=='true'?'SI':'NO')
                +point_data('Titulo del estudiante: ', 'title_name', enrollment.information_per_enroll.title_name)
                +point_data('Es estudiante por primera vez: ', 'new_student', `${studentData.new_student?'SI':'NO'} - ${studentData.drags?'CON ARRASTRE':'SIN ARRASTRE'}`)
                +point_data('Carrera: ', 'career', studentData.career)
             .row.my-4
              table.table.table-striped.table-hover.rounded
                  -let hrs = 0
                  -let subs = 0
                  thead.text-white(style="background-color:rgb(40, 55, 71)")
                   tr
                      th(scope='col') Semestre
                      th(scope='col') Nombre
                      th(scope='col') #
                      th(scope='col') Horas semanales
                  tbody.modal_signatures_area
                    - subs = enrollment.request_subjects.length
                    each subject in enrollment.request_subjects
                      - let {no,level,name,enrollment,weekly_hours} = subject
                        - hrs+=Number(weekly_hours)
                        tr.no_container
                            th.level(style="vertical-align:middle").text-center=level
                            td.name(style="vertical-align:middle").text-center=name
                            td.enrollment(style="vertical-align:middle")=enrollment
                            td.weekly_hours(style="vertical-align:middle").text-center=weekly_hours
                  caption.caption_message
                    | Asignaturas solicitadas: 
                    =subs
                    | , horas totales: 
                    =hrs
                    |.
             .row.mt-4.mb-2.justify-content-end
                .col-auto
                  form.modal_form(id=`${enrollment._id}FORM`)
                    input.period(type="hidden", value=enrollment.enrollment_features.period, name="period")
                    input.year(type="hidden", value=enrollment.enrollment_features.year, name="year")
                    input.student(type="hidden", value=enrollment.student[0], name="student")
                    button.btn.btn-primary(type="submit")
                      | Descargar documentacion relacionada a esta matrícula.
include ../partials/footer.pug
script(src="/socket.io/socket.io.js")
script(src="/js/admin_all_enrollments.js")